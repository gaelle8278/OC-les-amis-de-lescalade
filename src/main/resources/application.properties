# ==============================================================
# = Data Source
# ==============================================================
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/lesamisdelescalade
spring.datasource.username=dbuser
spring.datasource.password=userpwd

# ==============================================================
# = The SQL dialect makes Hibernate generate better SQL for the chosen database
# ==============================================================
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect


# ==============================================================
# = Hibernate ddl auto (create, create-drop, update)
# ==============================================================
spring.jpa.hibernate.ddl-auto=none

# ==============================================================
# = Show or not log for each sql query
# ==============================================================
spring.jpa.show-sql = false

#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type=TRACE

# ==============================================================
# = View resolver
# ==============================================================
#spring.mvc.view.prefix=/WEB-INF/view/
#spring.mvc.view.suffix=.jsp

# ==============================================================
# = Keep the connection alive if idle for a long time (needed in production)
# ==============================================================
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select email, password, active from user where email=?
spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.id=ur.user_id) inner join role r on(ur.role_id=r.id) where u.email=?


 
